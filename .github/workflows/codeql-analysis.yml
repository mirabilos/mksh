{
  "jobs": {
    "analyse": {
      "permissions": {
        "actions": "read",
        "contents": "read",
        "security-events": "write"
      },
      "runs-on": "${{ matrix.os }}",
      "steps": [
        {
          "name": "Cancel previous runs",
          "uses": "styfle/cancel-workflow-action@0.11.0",
          "with": {
            "access_token": "${{ github.token }}",
            "all_but_latest": true
          }
        },
        {
          "uses": "actions/checkout@v3.5.3"
        },
        {
          "run": "(git gc || :)"
        },
        {
          "name": "Initialise CodeQL",
          "uses": "github/codeql-action/init@codeql-bundle-20230524",
          "with": {
            "languages": "cpp"
          }
        },
        {
          "run": "tryshell=bash; nextshell=dash; set -ex; rm -rf build; mkdir build; flag=; for dir in mksh lksh; do mkdir build/$dir; cd build/$dir; test -z \"$flag\" || cp ../../.extra/printf.c .; $tryshell ../../Build.sh $flag -r; if script -qc true >/dev/null 2>&1; then script -qef -c './test.sh -f'; else script -q typescript ./test.sh -f; fi; ./?ksh ../../FAQ2HTML.sh; cd ../..; tryshell=$nextshell; flag=-L; USE_PRINTF_BUILTIN=1; export USE_PRINTF_BUILTIN; CPPFLAGS=\"$CPPFLAGS -DMKSH_BINSHPOSIX -DMKSH_BINSHREDUCED\"; export CPPFLAGS; done; echo Alles gut."
        },
        {
          "name": "Perform CodeQL Analysis",
          "uses": "github/codeql-action/analyze@codeql-bundle-20230524"
        }
      ],
      "strategy": {
        "fail-fast": true,
        "matrix": {
          "os": [
            "ubuntu-latest",
            "macos-latest"
          ]
        }
      }
    }
  },
  "name": "CodeQL",
  "on": {
    "workflow_dispatch": null
  }
}
